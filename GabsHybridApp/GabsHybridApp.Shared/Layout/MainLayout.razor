@inherits LayoutComponentBase

@using GabsHybridApp.Shared.Components
@using GabsHybridApp.Shared.Layout

@inject IHostCapabilities Caps

@* @inject ILocalStorageService localStorage
 *@
 @inject NavigationManager NavManager

<AntiforgeryToken />

<MyMudThemeProvider IsDarkMode="_isDarkMode" />
<MyMudProviders />

<PageTitle>GabsHybridApp</PageTitle>

<MudLayout>
    <MudAppBar Elevation="4">
        <MudHidden Breakpoint="Breakpoint.SmAndDown">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" />
        </MudHidden>
        <MudHidden Breakpoint="Breakpoint.MdAndUp">
            <MudIconButton Icon="@Icons.Material.Outlined.Menu"
                           Color="Color.Inherit"
                           Edge="Edge.Start"
                           OnClick="DrawerToggle" />
        </MudHidden>
        <MudText Typo="Typo.h6" Class="ml-3">GabsHybridApp</MudText>

        <MudSpacer />

        <!-- Support Links -->
        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <MudMenu EndIcon="@Icons.Material.Filled.KeyboardArrowDown"
                     Label="Support"
                     Color="Color.Inherit"
                     Dense="true"
                     AnchorOrigin="Origin.BottomRight" TransformOrigin="Origin.TopRight">
                <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Community</b></MudText>
                <MudText Typo="Typo.body2" Class="px-4 py-2"><b>Resources</b></MudText>
                <MudMenuItem Href="https://mudblazor.com/docs/overview" Target="_blank">MudBlazor Documentation</MudMenuItem>
                <MudMenuItem Href="https://mudblazor.com/getting-started/installation" Target="_blank">Quick-Start Guide</MudMenuItem>
            </MudMenu>
        </MudHidden>

        <!-- 🔔 Notification Panel (handles SignalR & user data internally) -->
        @* <NotificationPanel IncludeSample="true" /> *@

        <!-- 🌙 Dark Mode Toggle -->
        <MudTooltip Text="Toggle Dark Mode">
            <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.Brightness3 : Icons.Material.Filled.WbSunny)"
                           Color="Color.Inherit"
                           OnClick="ToggleDarkMode" />
        </MudTooltip>

        <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true">
            <!-- 💻 GitHub Link -->
            <MudTooltip Text="Github">
                <MudIconButton Icon="@Icons.Custom.Brands.GitHub"
                               Color="Color.Inherit"
                               Href="https://github.com/hubert17/EdwillJSystem"
                               Target="_blank" />
            </MudTooltip>
        </MudHidden>

        <!-- 👤 User Menu -->
        <AuthorizeView>
            <MudMenu AnchorOrigin="Origin.TopLeft" Dense="true" Class="mt-1 ml-4">
                <ActivatorContent>
                    <MudAvatar Size="Size.Medium">
                        <MudImage Src="https://avatars.githubusercontent.com/u/7923889?v=4" />
                    </MudAvatar>
                </ActivatorContent>
                <ChildContent>
                    <MudListItem T="string" Text="My Account" Icon="@Icons.Material.Outlined.Person" Href="/account/changepassword" />
                    <MudListItem T="string" Text="Settings" Icon="@Icons.Material.Filled.Settings" />
                    <MudListItem T="string" Text="Logout" Icon="@Icons.Material.Filled.Logout" OnClick='() => NavManager.NavigateTo("/account/logout", Caps.RequiresFullReloadAfterAuth)' />
                    <MudDivider />
                </ChildContent>
            </MudMenu>
        </AuthorizeView>

    </MudAppBar>

    <MudDrawer @bind-Open="_drawerOpen"
               ClipMode="DrawerClipMode.Always"
               Variant="@DrawerVariant.Responsive"
               Elevation="6">
        <NavMenu IsDarkMode="_isDarkMode" />
    </MudDrawer>

    <MudMainContent>
        <MudContainer Class="mt-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

<!-- Global Error UI -->
<div id="blazor-error-ui">
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">🗙</a>
</div>

@code {
    private bool _drawerOpen = true;
    private bool _isDarkMode = false;

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private async Task ToggleDarkMode()
    {
        _isDarkMode = !_isDarkMode;
        StorageConstants.IsDarkMode = _isDarkMode;
        //await localStorage.SetItemAsync("isDarkMode", _isDarkMode);
        StateHasChanged();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;

        // JS interop is available now
        //bool hasKey = await localStorage.ContainKeyAsync("isDarkMode");
        //_isDarkMode = hasKey ? await localStorage.GetItemAsync<bool>("isDarkMode") : false;

        StorageConstants.IsDarkMode = _isDarkMode;

        // We changed state after first render -> re-render
        StateHasChanged();
    }
}
