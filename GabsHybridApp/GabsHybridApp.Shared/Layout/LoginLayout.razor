@inherits LayoutComponentBase
@using System.Text.Json

@inject HttpClient HttpClient

<MyMudThemeProvider IsDarkMode="_isDarkMode" />
<MyMudProviders />

@if (!_isDarkMode)
{
    <style>
        body {
            background-image: url("@backgroundImageUrl");
            background-size: cover;
            background-color: #263238;
        }
    </style>
}

<PageTitle>GabsHybridApp</PageTitle>

<MudContainer MaxWidth="MaxWidth.Small" Class="d-flex align-center" Style="height: 100vh;">
    <div class="d-flex flex-column mud-width-full">
        <MudAppBar Fixed="false">
            <MudText Typo="Typo.h5" Class="ml-n2">GabsHybridApp</MudText>
            <MudSpacer />
            <MudIconButton Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit" Class="mr-n4" Href="/" />
        </MudAppBar>
        <MudPaper Elevation="25" Class="pa-8" Width="100%" MaxWidth="600px">
            <MudIcon Icon="@Icons.Custom.Brands.MudBlazor" Size="Size.Large" Style="width:100px; height:100px;" />
            @Body
        </MudPaper>
    </div>
</MudContainer>

@code {
    bool _isDarkMode = false;

    protected override async Task OnInitializedAsync()
    {
        _isDarkMode = StorageConstants.IsDarkMode;
        if (!_isDarkMode)
        {
            await SetBackgroundWithBingWallpapers();
        }
    }

    #region UI:BingWallpapaer
    private record BingPhoto(string url);
    private string backgroundImageUrl = "https://bing.com";

    private async Task SetBackgroundWithBingWallpapers()
    {
        try
        {
            var response = await HttpClient.GetAsync("https://api45gabs.azurewebsites.net/api/sample/bingphotos");
            if (response.IsSuccessStatusCode)
            {
                var jsonPhotos = await response.Content.ReadAsStringAsync();
                var bingPhotos = JsonSerializer.Deserialize<List<BingPhoto>>(jsonPhotos)!;
                backgroundImageUrl += bingPhotos.FirstOrDefault()!.url;
            }
            else
                Console.WriteLine($"Error fetching Bing photos...");
        }
        catch(Exception ex)
        {
            Console.WriteLine("Bing wallpaper is unavailable. " + ex.Message);
        }

    }
    #endregion

}