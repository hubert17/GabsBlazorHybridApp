// <auto-generated />
using System;
using GabsHybridApp.Shared.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GabsHybridApp.Web.Migrations
{
    [DbContext(typeof(HybridAppDbContext))]
    [Migration("20251010221908_initMigration")]
    partial class initMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GabsHybridApp.Shared.Models.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("NavigateToUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("GabsHybridApp.Shared.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PictureFilename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Unit")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Original scent, 64 loads",
                            Name = "Tide Laundry Detergent",
                            Unit = "bottle",
                            UnitPrice = 350.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Size 4, 120 count",
                            Name = "Pampers Diapers",
                            Unit = "box",
                            UnitPrice = 999.00m
                        },
                        new
                        {
                            Id = 3,
                            Description = "With 1 blade cartridge",
                            Name = "Gillette Fusion Razor",
                            Unit = "pack",
                            UnitPrice = 199.75m
                        },
                        new
                        {
                            Id = 4,
                            Description = "4 bars, moisturizing cream",
                            Name = "Dove Beauty Bar",
                            Unit = "pack",
                            UnitPrice = 75.00m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Real, 30 oz",
                            Name = "Hellmann's Mayonnaise",
                            Unit = "jar",
                            UnitPrice = 120.00m
                        },
                        new
                        {
                            Id = 6,
                            Description = "Phoenix scent, 4 oz",
                            Name = "Axe Body Spray",
                            Unit = "bottle",
                            UnitPrice = 190.00m
                        },
                        new
                        {
                            Id = 7,
                            Description = "Classic, 12 oz",
                            Name = "Nescafe Instant Coffee",
                            Unit = "jar",
                            UnitPrice = 170.00m
                        },
                        new
                        {
                            Id = 8,
                            Description = "Milk chocolate, 1.5 oz",
                            Name = "KitKat Chocolate Bar",
                            Unit = "bar",
                            UnitPrice = 30.00m
                        },
                        new
                        {
                            Id = 9,
                            Description = "24-pack, 16.9 oz bottles",
                            Name = "Nestle Pure Life Water",
                            Unit = "pack",
                            UnitPrice = 180.00m
                        },
                        new
                        {
                            Id = 10,
                            Description = "1 Liter bottle of Coca-Cola",
                            Name = "Coca-Cola 1 Liter",
                            Unit = "bottle",
                            UnitPrice = 30.00m
                        },
                        new
                        {
                            Id = 11,
                            Description = "12 fl oz can of Sprite",
                            Name = "Sprite 12 oz",
                            Unit = "can",
                            UnitPrice = 12.00m
                        },
                        new
                        {
                            Id = 12,
                            Description = "Orange juice with pulp, 16.9 fl oz bottle",
                            Name = "Minute Maid Pulpy Orange",
                            Unit = "bottle",
                            UnitPrice = 25.00m
                        },
                        new
                        {
                            Id = 13,
                            Description = "750ml",
                            Name = "Tanduay White Rum",
                            Unit = "bottle",
                            UnitPrice = 125.375m
                        },
                        new
                        {
                            Id = 14,
                            Description = "1000ml",
                            Name = "Red Horse Beer",
                            Unit = "bottle",
                            UnitPrice = 118.0625m
                        },
                        new
                        {
                            Id = 15,
                            Description = "1L blended premium brandy",
                            Name = "Emperador Light",
                            Unit = "bottle",
                            UnitPrice = 165.442m
                        });
                });

            modelBuilder.Entity("GabsHybridApp.Shared.Models.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Roles")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServerSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("GabsHybridApp.Shared.Models.Notification", b =>
                {
                    b.HasOne("GabsHybridApp.Shared.Models.UserAccount", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
