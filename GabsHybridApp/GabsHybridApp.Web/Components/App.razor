<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />

    <title>GabsBlazorHybridApp - Modern .NET 9 Blazor Web Application</title>
    <meta property="og:title" content=">GabsBlazorHybridApp - Modern .NET 9 Blazor Mobile/Web Application" />
    <meta property="og:description" content="Build modern, beautiful, and fast web applications using Blazor and MudBlazor, powered by .NET 9." />

    <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
    <link href='@Assets["_content/MudBlazor/MudBlazor.min.css"]' rel="stylesheet" />
    <link href='@Assets["_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.css"]' rel="stylesheet" />
    <link href='@Assets["_content/GabsHybridApp.Shared/MudBlazor.app.css"]' rel="stylesheet" />

    <link href='@Assets["_content/GabsHybridApp.Shared/app.css"]' rel="stylesheet" />
    <link href='@Assets["GabsHybridApp.Web.styles.css"]' rel="stylesheet" />
    <link rel="icon" type="image/png" href="_content/GabsHybridApp.Shared/favicon.png" />

    <HeadOutlet @rendermode="RenderModeForPage" />
</head>

<body>
    <Routes @rendermode="RenderModeForPage" />

    <script src="_framework/blazor.web.js"></script>
    <script src='@Assets["_content/MudBlazor/MudBlazor.min.js"]'></script>
    <script src='@Assets["_content/CodeBeam.MudBlazor.Extensions/MudExtensions.min.js"]'></script>

    <script src='@Assets["_content/GabsHybridApp.Shared/js/geo.js"]'></script>
    <script src='@Assets["_content/GabsHybridApp.Shared/js/camera.js"]'></script>
</body>

</html>

@code {
    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    // Keep auth pages server-rendered; elsewhere use Interactive Server without prerender
    private IComponentRenderMode? RenderModeForPage => IsNonInteractive(HttpContext?.Request.Path ?? default)
            ? null : new InteractiveServerRenderMode(prerender: false);

    // List any routes that must be pure server-rendered (no circuit)
    private static readonly string[] _nonInteractivePrefixes = new[]
    {
        "/account/login",
        "/account/logout"
    };

    private static bool IsNonInteractive(PathString path)
    {
        if (!path.HasValue) return false;
        // Compare case-insensitively and only on the prefix
        var span = path.Value.AsSpan();
        foreach (var prefix in _nonInteractivePrefixes)
        {
            if (span.StartsWith(prefix, StringComparison.OrdinalIgnoreCase))
                return true;
        }
        return false;
    }
}
